name: deploy-snowflake-prod
on: [release, workflow_dispatch, push] #workflow_dispatch: Allows you to run this workflow manually from the Actions tab
jobs:
  deploy-snowflake-prod:
    name: "Release Snowflake Models to Production"
    runs-on: ubuntu-latest
    environment: prod
    env:
      SNOWFLAKE_CONNECTIONS_SNOWCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_SNOWCONNECTION_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_CONNECTIONS_SNOWCONNECTION_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

      SNOWFLAKE_CONNECTIONS_MYCONNECTION_ROLE: MILES #SNOWFLAKE_MODEL_PROMOTER_ROLE
      SNOWFLAKE_CONNECTIONS_MYCONNECTION_WAREHOUSE: MILES_WH #SNOWFLAKE_MODEL_PROMOTER_WH_XSMALL

      SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ vars.SNOWFLAKE_SCHEMA }}
      SNOWFLAKE_MODELS_STAGE: ${{ vars.SNOWFLAKE_MODELS_STAGE }}
    steps:
      # Checkout step is necessary if you want to use a config file from your repo
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

        # Snowflake CLI installation
      - uses: Snowflake-Labs/snowflake-cli-action@v1
        with:
          cli-version: "latest"
          default-config-file-path: "./.github/workflows/config.toml"

        # Use the CLI
      - name: Build & Deploy Models to Production
        run: |
          cd ./mlplatform/modelstore
          snow snowpark build
          snow snowpark deploy --replace

        #snow snowpark package create snowflake-ml-python==1.5.3 --allow-shared-libraries
        #snow snowpark package upload -f snowflake_ml_python.zip -s $SNOWFLAKE_STAGE/packages
